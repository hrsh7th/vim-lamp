let s:expect = themis#helper('expect')

Describe lamp#view#buffer

  After each
    call lamp#view#buffer#reset()
  End

  It Should open buffer
    let s:filename = lamp#config('root') . '/fixture/typescript-fixture/src/index.ts'
    call lamp#view#buffer#open('edit', { 'filename': s:filename, 'lnum': 3, 'col': 3 })
    call s:expect(bufname('%')).to_equal(s:filename)
    call s:expect(3).to_equal(line('.'))
    call s:expect(3).to_equal(col('.'))
  End

  It Should update changedtick
    let s:filename = lamp#config('root') . '/fixture/typescript-fixture/src/index.ts'
    call lamp#view#buffer#open('edit', { 'filename': s:filename, 'lnum': 3, 'col': 3 })
    let s:buffer = getbufline(s:filename, '^', '$')

    normal! i1234567890

    " update changedtick.
    let s:changedtick = getbufvar(s:filename, 'changedtick')
    call lamp#view#buffer#touch(s:filename)
    call s:expect(s:changedtick).not.to_equal(getbufvar(bufnr(s:filename), 'changedtick'))

    " keep undo.
    normal! u
    call s:expect(s:buffer).to_equal(getbufline(s:filename, '^', '$'))
  End

End

