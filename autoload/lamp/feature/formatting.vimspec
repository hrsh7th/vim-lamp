let s:expect = themis#helper('expect')

Describe lamp#feature#formatting

  Before each
    let s:server = lamp#register('typescript-language-server', {
          \   'command': [lamp#config('root') . '/node_modules/.bin/typescript-language-server', '--stdio'],
          \   'filetypes': ['typescript', 'typescript.tsx'],
          \   'root_uri': { -> lamp#config('root') . '/misc/typescript/' }
          \ })
    call lamp#sync(s:server.start())
    call lamp#sync(s:server.initialize())
  End

  After each
    call lamp#sync(s:server.stop())
    call lamp#view#buffer#reset()
  End

  It Should formatting 1
    let &expandtab = 1
    let &shiftwidth = 2

    call lamp#view#buffer#open('edit', {
          \   'filename': lamp#config('root') . '/misc/typescript/src/formatting.ts',
          \   'lnum': 1,
          \   'col': 1
          \ })
    set filetype=typescript

    let l:bufnr = bufnr('%')
    let l:lines = lamp#view#buffer#get_lines(l:bufnr)
    call lamp#feature#formatting#do({})
    call lamp#sync({ -> lamp#view#buffer#get_lines(l:bufnr) != l:lines })
    call s:expect([
          \   'if (true) {',
          \   '  console.log("sample text1");',
          \   '}',
          \   '',
          \   'if (true) {',
          \   '  console.log("sample text2");',
          \   '}',
          \   ''
          \ ]).to_equal(lamp#view#buffer#get_lines(l:bufnr))
  End

  It Should formatting 2
    let &expandtab = 0
    let &shiftwidth = 2

    call lamp#view#buffer#open('edit', {
          \   'filename': lamp#config('root') . '/misc/typescript/src/formatting.ts',
          \   'lnum': 1,
          \   'col': 1
          \ })
    set filetype=typescript

    let l:bufnr = bufnr('%')
    let l:lines = lamp#view#buffer#get_lines(l:bufnr)
    call lamp#feature#formatting#do({})
    call lamp#sync({ -> lamp#view#buffer#get_lines(l:bufnr) != l:lines })
    call s:expect([
          \   'if (true) {',
          \   "\t" . 'console.log("sample text1");',
          \   '}',
          \   '',
          \   'if (true) {',
          \   "\t" . 'console.log("sample text2");',
          \   '}',
          \   ''
          \ ]).to_equal(lamp#view#buffer#get_lines(l:bufnr))
  End

End


